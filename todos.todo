# ------------------------------------------------------------------------------
#                                       Todos
# ------------------------------------------------------------------------------


[ ] Replace all prints with logs and use correct level
[ ] Specially handle Xcode Managed Provisions
	[ ] Onboarding flow should show a Automanage or no profile or something item
	    for the profile chooser
	[ ] Xcode filter out xcode managed profiles
[ ] read export settings for ios and use it to prefill
[ ] use export template for environment or see what's best
	[ ] if environment has XDG_*, templates will install at XDG_*. Otherwise it's installed in the Application Support directory.
[ ] properly destroy threads before exiting
[ ] error parsing and displaying
	[ ] shell
		[ ] stderr
			[ ] pipe to stdout
		[ ] figure out how to get program return codes from shell
			[ ] write shell script that captures code and outputs it as the last line. Shell can then parse and remove that line.
		[ ] test using a file based output, so godot can execute a command and
		  have non blocking output/error/input
			[ ] input could be used for ios-deploy when deploying and linking
			  lldb.
	[ ] xcodebuild errors
		[ ] parse from output and display to user
		[ ] printed with fmt: "<system> Error: <message>"
		[ ] printed: ** Build Failed **
	[ ] ios-deploy errors
		[ ] defined ios-deploy/src/errors.h
		[ ] printed with fmt: "Error 0x<code>: <call> <message>"
	[ ] better build status using errors and tips to fix
[ ] allow user to set custom plist values
[ ] change plist to use build vars, maybe use xcconfig
[ ] What to do when:
	[ ] theres no provisioning profiles
	[ ] theres no teams
[ ] write tests
[X] handle when export template not installed
[X] test automanage setting
	[X] works, just have to allow no provision selected in gui
[X] get orientation information from project settings
	[X] map godot orientations
		[X] landscape         -> UIInterfaceOrientationLandscapeLeft
		[X] reverse_landscape -> UIInterfaceOrientationLandscapeRight
		[X] sensor_landscape  -> landscape & reverse_landscape
		[X] portrait          -> UIInterfaceOrientationPortrait
		[X] reverse_portrait  -> UIInterfaceOrientationPortraitUpsideDown
		[X] sensor_portrait   -> portrait & reverse_portrait
		[X] sensor            -> all
	[X] v3 display/window,handheld/orientation
	[X] v2 display/orientation
[X] #v3 remove global logger from ProjectSettings (Globals)
	[X] add logger as child of main (EditorPlugin)
	[X] add it to group 'com.indicainkwell.ios-deploy'
	[X] name logger node 'ios-deploy'
	[X] have static get_logger() retrieve logger from MainLoop
[X] #v3 Godot Project Directory can't be the same as Bundle Name @see notes
[X] Figure out what is breaking v3 from reading pbx and plist @see notes
[X] async everything
	[X] write everything sync, then spin up one thread to do the whole build process.
	[X] write everything async, then use signals to control build process
[X] make config file to store past settings
[X] impl module logger
[X] use `security cms -D -i` instead of awk to strip provision file of signature pre json conversion
	[X] does not work for non-signed provisioning profiles, I'm not sure if that would be a big problem.
	[X] Awk may not work for all signed profiles due to binary format.
	[X] Find someway to detect if profile is signed.
    [X] security prints "failed to add data to decoder: UNKNOWN (-8183(d)" when not signed.

# -- GUI Todos

[X] onboarding flow
	[X] if provision is not a wild card then
		[X] bundleid shouldn't be changed
		[X] bundle id should also be filled in according to provision
[X] make onboarding flow
	[X] Create an interface that will connect editing and committing changes to the onboarding screens and elements.
		[X] Validate when entering a new screen
		[X] Validate on input
		[X] disable next button depending on valid state
		[X] Create Controller hierarchy as node tree
		[X] Create processing methodology for controller node tree
		[X] Extract parts of Controller into subcontrollers
			[X] onboarding controller
			[X] xcode_project
			[X] move xcode_project to _xcode and rename to project
[X] apple button popup
	[X] hidden progress bar
		[X] draw as flat color over button rather than using a tiny squished ProgressBar
	[X] show devices
[X] fix v3 ui rough edges
	[X] apple button popup
		[X] text does not fit
		[X] add padding to content
		[X] fix settings button from stopping mouse hover
[X] make v3 gui
	[X] replace panel with popup_panel
	[X] replace invalid_sbx.tres gui invalidation by drawing a simple red box around invalid control
[X] make signal connections via editor where possible
[X] settings take to long to open up
	[X] deploy_settings_menu visibility change signal is being emitted twice the first time it is shown
	[X] the second consecutive call seems to be from itself. it doesn't have a trace.
	[X] this seems to be caused by how the deploy_settings_menu scene is instantiated. It is set hidden at init and before it is added to the tree.
	[X] Solved. This is programmerd into godotengine/canvas_item.cpp.
		[X] Set flag to check for first draw.
[X] one click button
	[X] popup fully on screen
	[X] appear over everything
[X] invalidate ui
[X] hook up build progress and status to hover menu
[X] hover menu
[X] remove BundleName from deploy setting menu
	[X] bundlename will be the godot project dir name
	[X] only display name is needed
[X] just use Device, Team, and Provision structs instead of dicts

# -- Xcode Todos

[ ] write codesigner.gd
[X] Remove some buildSettings keys from project.pbxproj
	[X] <key>PROVISIONING_PROFILE</key> <string>$provisioning_profile_uuid_debug</string>
[X] #v3 is not deploying. @see notes
[X] #v3 strip pbxproj file of shell expansion lines
	[X] process this in ios_export_template
	[X] replace $binary with godot_ios
[X] multiple calls to ios_deploy.launch* async are not async as Command.run_async() waits between calls.
[X] deploy to devices
	[X] Fix deploy shell command, it is completely broken. May need to refactor Shell and Command. Also iOSDeploy.
	[X] have controller call `install_and_launch_on` if not already installed
[X] use build setting options over parsing pbx
[X] update pbx adds multiple times
[X] pbx does not add files in correct place
[X] #v2 find out what name xcode uses for the generated <name>.app
	[X] it's godot_ios.app
	[X] can be set with PRODUCT_NAME
	[X] or
	[X] this can be found in pbxproj
		[X] isa=PBXFileReference
		[X] explicitFileType=wrapper.application
		[X] path=godot_ios.app

# -- Provision Todos

[X] gui request bundleid validation as user types
[X] gui validate provisions by selected team and vice versa
[X] filter out provision profiles by
	[X] expiration date
	[X] duplicates, keep most recent
[X] parse provision profile dates


# ------------------------------------------------------------------------------
#                                       Notes
# ------------------------------------------------------------------------------


- Xcode Managed Provisioning Profiles
	- You can't manually specify them.
	- You can set CODE_SIGN_STYLE=Automatic and then use the same bundle id
		- Xcode will generate and install a provision for that bundle id.
		- So all you need is a bundle id and to make sure automanaged to true

- v3 is tough.
	- It's building but not deploying due to internal api error.
		- This appears to be caused by inconsistency with built Info.plist
			- In this case, CFBundleExecutable was set to godot_ios but binary
			  was actually ProjectNameBinary
	- This may be because of how ios_export_template copies template
		- Try not omitting amap, like adding an entitlements file and stuff
		- Additionally, fix the plist by removing expansion vars.
		- Solution was to pretty much rewrite godotengine/ios_export
	- Make min build requirements for v3 like below for v2
	- Other Caveats
		- Godot Project Directory can't be the same as Bundle Name
			- causes a clash with generated bundle, where it tries to create a
			  binary with the same name as the copied godot project
			- solution is to change the name of the created binary. This is
			  probably a build setting or in the pbxproj.
				- build setting: EXECUTABLE_NAME
				- in plist set CFBundleExecutable -> ${EXECUTABLE_NAME}

- You can build once with xcode and if there's no changes to bundleid, display
  name, or provision copy the godot project into the last build.app and resign
  it with identity.

- Godot Build Requirements
	- Info.plist
		- CFBundleIdentifier
		- CFBundleDisplayName
		- godot_path
	- project.pbxproj
		- Add godot game project file ref to PBXResourcesBuildPhase object
		- @see scripts/xcode/project.gd for more information
	- xcodebuild environment settings:
		- DEVELOPMENT_TEAM=teamid
		- CODE_SIGN_STYLE=Automatic
			- set as Automatic for automanaged
			- omit for manual
		- CODESIGN_IDENTITY
			- by default is "iPhone Developer"
			- otherwise gonna have to search keychain
		- PRODUCT_BUNDLE_IDENTIFIER=bundleid
		- PROVISIONING_PROFILE_SPECIFIER=profile.name (not appidname)

- ~~pbxproj signed diffs:~~
	- NOTE! The following is not required.
	# -- Project Configuration
		isa = PBXProject;
		attributes = {
			LastUpgradeCheck = 0500;
			ORGANIZATIONNAME = GodotEngine;
			# Needs to set target attributes, adding it if it doesn't exist
			TargetAttributes = {
				D0BCFE3318AEBDA2004A7AAE = {
					# DevelopmentTeam needs to be set for both manual and auto
					# signed
					DevelopmentTeam = TeamId;
					# ProvisioningStyle only needs to be set for auto
					ProvisioningStyle = Automatic;
				};
			};


- apple button event flow
	- press
		- validate xcode_project
			- open setup menu
		- copy template
		- build
		- deploy
	- hover
		- status of flow
		- button to open options
		- button to cancel
		  - no way to cancel right now.


# ------------------------------------------------------------------------------
#                                  Codesign Errors
# ------------------------------------------------------------------------------


> Code Signing Error: Code signing is required for product type 'Application' in SDK 'iOS 11.4'
> Code Signing Error: Provisioning profile "MyProfile" doesn't support the Push Notifications capability.
> Code Signing Error: Provisioning profile "MyProfile" doesn't include the aps-environment entitlement.
> Code Signing Error: Provisioning profile "MyProfile" doesn't support the In-App Purchase capability.
> Code Signing Error: Provisioning profile "MyProfile" is Xcode managed, but signing settings require a manually managed profile.

> Code Signing Error: godot_ios has conflicting provisioning settings. godot_ios is automatically signed, but provisioning profile $provisioning_profile_uuid_debug has been manually specified. Set the provisioning profile value to "Automatic" in the build settings editor, or switch to manual signing in the project editor.

Xcode is expecting automatic signing, but when you set the
PROVISIONING_PROFILE_SPECIFIER that confuses xcode. Either use
CODE_SIGN_STYLE=Automatic and don't pass profile specifier or use
CODE_SIGN_STYLE=Manual.

> Code Signing Error: Provisioning profile "MyProfile" doesn't include signing certificate "iPhone Developer: Newer Certificate Name (124444E331)"

You have to regenerate your profile.

Go to developer.apple.com/account/ios/profile, edit your "MyProfile" and
download it then double click it to install it. You can also install the new
"MyProfile" from Xcode -> Preferences -> Accounts -> YourAccount and press
'Download Manual Profiles'.


# ------------------------------------------------------------------------------
#                                 xcodebuild Errors
# ------------------------------------------------------------------------------


> It says something like "xcodebuild needs xcode but its
  '../path/to/XcodeCommandLineTool' is a command line tool instance"

Run: xcode-select --reset

To use default command line tools path.


# ------------------------------------------------------------------------------
#                                 iOSDeploy Errors
# ------------------------------------------------------------------------------


> 2018-06-05 00:31:34.471 ios-deploy[10328:205469] [ !! ] Error 0xe8000067: There was an internal API error. AMDeviceSecureInstallApplication(0, device, url, options, install_callback, 0)

Reasons:
	- malformed binary file name that does not match info.plist's
	  CFBundleExecutable


> 2018-05-12 00:39:59.708 ios-deploy[21471:5356099] [ !! ] Error 0xe8000022: The service is invalid. AMDeviceStartService(device, CFSTR("com.apple.debugserver"), &gdbfd, NULL)

Reasons:
	- Unsupported device version i.e. (11.2 vs 11.3)
		- Update Xcode for device support files
